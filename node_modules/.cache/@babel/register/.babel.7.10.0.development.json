{
  "{\"sourceRoot\":\"/Users/ruthbrand/haven/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/ruthbrand/haven\",\"filename\":\"/Users/ruthbrand/haven/server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/ruthbrand/haven\",\"plugins\":[],\"presets\":[]}:7.10.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/ruthbrand/haven/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/ruthbrand/haven",
      "filename": "/Users/ruthbrand/haven/server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/ruthbrand/haven",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/ruthbrand/haven/server.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/ruthbrand/haven/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/ruthbrand/haven/",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "const express = require('express');\n\nconst app = express();\napp.use(express.static('public')); //does this go here?\n\nconst cors = require('cors');\n\napp.use(cors());\napp.set('port', process.env.PORT || 3000);\napp.locals.title = 'Pet Box';\napp.get('/', (request, response) => {\n  response.send('Oh hey Pet Box');\n});\napp.listen(app.get('port'), () => {\n  console.log(`${app.locals.title} is running on http://localhost:${app.get('port')}.`);\n}); //most routes are gets, no post or patch yet until log\n//shelters, counselors, financial resources, food, legal, calming ?\n//mock data\n\napp.locals.shelters = [];\napp.locals.shelters = [{\n  id: 'a1',\n  name: 'Rover',\n  type: 'dog'\n}, {\n  id: 'b2',\n  name: 'Marcus Aurelius',\n  type: 'parakeet'\n}, {\n  id: 'c3',\n  name: 'Craisins',\n  type: 'cat'\n}];\napp.get('/', (request, response) => {\n  // response is actually handled by static asset express middleware\n  app.use(express.static('public'));\n}); //get request\n\napp.get('/api/v1/shelters', (request, response) => {\n  const shelters = app.locals.shelters;\n  response.json({\n    shelters\n  });\n});\napp.get('/api/v1/shelters/:id', (request, response) => {\n  const {\n    id\n  } = request.params; //iterates through the shelters data but its singular - like a ruby enumerable w/ pipes\n\n  const shelter = app.locals.shelters.find(shelter => shelter.id === id);\n\n  if (!shelter) {\n    return response.sendStatus(404);\n  }\n\n  response.status(200).json(shelter);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsImFwcCIsInVzZSIsInN0YXRpYyIsImNvcnMiLCJzZXQiLCJwcm9jZXNzIiwiZW52IiwiUE9SVCIsImxvY2FscyIsInRpdGxlIiwiZ2V0IiwicmVxdWVzdCIsInJlc3BvbnNlIiwic2VuZCIsImxpc3RlbiIsImNvbnNvbGUiLCJsb2ciLCJzaGVsdGVycyIsImlkIiwibmFtZSIsInR5cGUiLCJqc29uIiwicGFyYW1zIiwic2hlbHRlciIsImZpbmQiLCJzZW5kU3RhdHVzIiwic3RhdHVzIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXZCOztBQUNBLE1BQU1DLEdBQUcsR0FBR0YsT0FBTyxFQUFuQjtBQUNBRSxHQUFHLENBQUNDLEdBQUosQ0FBUUgsT0FBTyxDQUFDSSxNQUFSLENBQWUsUUFBZixDQUFSLEUsQ0FDQTs7QUFDQSxNQUFNQyxJQUFJLEdBQUdKLE9BQU8sQ0FBQyxNQUFELENBQXBCOztBQUNBQyxHQUFHLENBQUNDLEdBQUosQ0FBUUUsSUFBSSxFQUFaO0FBR0FILEdBQUcsQ0FBQ0ksR0FBSixDQUFRLE1BQVIsRUFBZ0JDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxJQUFaLElBQW9CLElBQXBDO0FBQ0FQLEdBQUcsQ0FBQ1EsTUFBSixDQUFXQyxLQUFYLEdBQW1CLFNBQW5CO0FBRUFULEdBQUcsQ0FBQ1UsR0FBSixDQUFRLEdBQVIsRUFBYSxDQUFDQyxPQUFELEVBQVVDLFFBQVYsS0FBdUI7QUFDbENBLEVBQUFBLFFBQVEsQ0FBQ0MsSUFBVCxDQUFjLGdCQUFkO0FBQ0QsQ0FGRDtBQUlBYixHQUFHLENBQUNjLE1BQUosQ0FBV2QsR0FBRyxDQUFDVSxHQUFKLENBQVEsTUFBUixDQUFYLEVBQTRCLE1BQU07QUFDaENLLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFhLEdBQUVoQixHQUFHLENBQUNRLE1BQUosQ0FBV0MsS0FBTSxtQ0FBa0NULEdBQUcsQ0FBQ1UsR0FBSixDQUFRLE1BQVIsQ0FBZ0IsR0FBbEY7QUFDRCxDQUZELEUsQ0FJQTtBQUNBO0FBRUE7O0FBQ0FWLEdBQUcsQ0FBQ1EsTUFBSixDQUFXUyxRQUFYLEdBQXNCLEVBQXRCO0FBRUFqQixHQUFHLENBQUNRLE1BQUosQ0FBV1MsUUFBWCxHQUFzQixDQUNwQjtBQUFFQyxFQUFBQSxFQUFFLEVBQUUsSUFBTjtBQUFZQyxFQUFBQSxJQUFJLEVBQUUsT0FBbEI7QUFBMkJDLEVBQUFBLElBQUksRUFBRTtBQUFqQyxDQURvQixFQUVwQjtBQUFFRixFQUFBQSxFQUFFLEVBQUUsSUFBTjtBQUFZQyxFQUFBQSxJQUFJLEVBQUUsaUJBQWxCO0FBQXFDQyxFQUFBQSxJQUFJLEVBQUU7QUFBM0MsQ0FGb0IsRUFHcEI7QUFBRUYsRUFBQUEsRUFBRSxFQUFFLElBQU47QUFBWUMsRUFBQUEsSUFBSSxFQUFFLFVBQWxCO0FBQThCQyxFQUFBQSxJQUFJLEVBQUU7QUFBcEMsQ0FIb0IsQ0FBdEI7QUFNQXBCLEdBQUcsQ0FBQ1UsR0FBSixDQUFRLEdBQVIsRUFBYSxDQUFDQyxPQUFELEVBQVVDLFFBQVYsS0FBdUI7QUFDbEM7QUFDQVosRUFBQUEsR0FBRyxDQUFDQyxHQUFKLENBQVFILE9BQU8sQ0FBQ0ksTUFBUixDQUFlLFFBQWYsQ0FBUjtBQUNELENBSEQsRSxDQUtBOztBQUNBRixHQUFHLENBQUNVLEdBQUosQ0FBUSxrQkFBUixFQUE0QixDQUFDQyxPQUFELEVBQVVDLFFBQVYsS0FBdUI7QUFDakQsUUFBTUssUUFBUSxHQUFHakIsR0FBRyxDQUFDUSxNQUFKLENBQVdTLFFBQTVCO0FBRUFMLEVBQUFBLFFBQVEsQ0FBQ1MsSUFBVCxDQUFjO0FBQUVKLElBQUFBO0FBQUYsR0FBZDtBQUNELENBSkQ7QUFNQWpCLEdBQUcsQ0FBQ1UsR0FBSixDQUFRLHNCQUFSLEVBQWdDLENBQUNDLE9BQUQsRUFBVUMsUUFBVixLQUF1QjtBQUNyRCxRQUFNO0FBQUVNLElBQUFBO0FBQUYsTUFBU1AsT0FBTyxDQUFDVyxNQUF2QixDQURxRCxDQUVyRDs7QUFDQSxRQUFNQyxPQUFPLEdBQUd2QixHQUFHLENBQUNRLE1BQUosQ0FBV1MsUUFBWCxDQUFvQk8sSUFBcEIsQ0FBeUJELE9BQU8sSUFBSUEsT0FBTyxDQUFDTCxFQUFSLEtBQWVBLEVBQW5ELENBQWhCOztBQUNBLE1BQUksQ0FBQ0ssT0FBTCxFQUFjO0FBQ1osV0FBT1gsUUFBUSxDQUFDYSxVQUFULENBQW9CLEdBQXBCLENBQVA7QUFDRDs7QUFDRGIsRUFBQUEsUUFBUSxDQUFDYyxNQUFULENBQWdCLEdBQWhCLEVBQXFCTCxJQUFyQixDQUEwQkUsT0FBMUI7QUFDRCxDQVJEIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9ydXRoYnJhbmQvaGF2ZW4vIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcbmFwcC51c2UoZXhwcmVzcy5zdGF0aWMoJ3B1YmxpYycpKTtcbi8vZG9lcyB0aGlzIGdvIGhlcmU/XG5jb25zdCBjb3JzID0gcmVxdWlyZSgnY29ycycpO1xuYXBwLnVzZShjb3JzKCkpO1xuXG5cbmFwcC5zZXQoJ3BvcnQnLCBwcm9jZXNzLmVudi5QT1JUIHx8IDMwMDApO1xuYXBwLmxvY2Fscy50aXRsZSA9ICdQZXQgQm94JztcblxuYXBwLmdldCgnLycsIChyZXF1ZXN0LCByZXNwb25zZSkgPT4ge1xuICByZXNwb25zZS5zZW5kKCdPaCBoZXkgUGV0IEJveCcpO1xufSk7XG5cbmFwcC5saXN0ZW4oYXBwLmdldCgncG9ydCcpLCAoKSA9PiB7XG4gIGNvbnNvbGUubG9nKGAke2FwcC5sb2NhbHMudGl0bGV9IGlzIHJ1bm5pbmcgb24gaHR0cDovL2xvY2FsaG9zdDoke2FwcC5nZXQoJ3BvcnQnKX0uYCk7XG59KTtcblxuLy9tb3N0IHJvdXRlcyBhcmUgZ2V0cywgbm8gcG9zdCBvciBwYXRjaCB5ZXQgdW50aWwgbG9nXG4vL3NoZWx0ZXJzLCBjb3Vuc2Vsb3JzLCBmaW5hbmNpYWwgcmVzb3VyY2VzLCBmb29kLCBsZWdhbCwgY2FsbWluZyA/XG5cbi8vbW9jayBkYXRhXG5hcHAubG9jYWxzLnNoZWx0ZXJzID0gW107XG5cbmFwcC5sb2NhbHMuc2hlbHRlcnMgPSBbXG4gIHsgaWQ6ICdhMScsIG5hbWU6ICdSb3ZlcicsIHR5cGU6ICdkb2cnIH0sXG4gIHsgaWQ6ICdiMicsIG5hbWU6ICdNYXJjdXMgQXVyZWxpdXMnLCB0eXBlOiAncGFyYWtlZXQnIH0sXG4gIHsgaWQ6ICdjMycsIG5hbWU6ICdDcmFpc2lucycsIHR5cGU6ICdjYXQnIH1cbl07XG5cbmFwcC5nZXQoJy8nLCAocmVxdWVzdCwgcmVzcG9uc2UpID0+IHtcbiAgLy8gcmVzcG9uc2UgaXMgYWN0dWFsbHkgaGFuZGxlZCBieSBzdGF0aWMgYXNzZXQgZXhwcmVzcyBtaWRkbGV3YXJlXG4gIGFwcC51c2UoZXhwcmVzcy5zdGF0aWMoJ3B1YmxpYycpKTtcbn0pO1xuXG4vL2dldCByZXF1ZXN0XG5hcHAuZ2V0KCcvYXBpL3YxL3NoZWx0ZXJzJywgKHJlcXVlc3QsIHJlc3BvbnNlKSA9PiB7XG4gIGNvbnN0IHNoZWx0ZXJzID0gYXBwLmxvY2Fscy5zaGVsdGVycztcblxuICByZXNwb25zZS5qc29uKHsgc2hlbHRlcnMgfSk7XG59KTtcblxuYXBwLmdldCgnL2FwaS92MS9zaGVsdGVycy86aWQnLCAocmVxdWVzdCwgcmVzcG9uc2UpID0+IHtcbiAgY29uc3QgeyBpZCB9ID0gcmVxdWVzdC5wYXJhbXM7XG4gIC8vaXRlcmF0ZXMgdGhyb3VnaCB0aGUgc2hlbHRlcnMgZGF0YSBidXQgaXRzIHNpbmd1bGFyIC0gbGlrZSBhIHJ1YnkgZW51bWVyYWJsZSB3LyBwaXBlc1xuICBjb25zdCBzaGVsdGVyID0gYXBwLmxvY2Fscy5zaGVsdGVycy5maW5kKHNoZWx0ZXIgPT4gc2hlbHRlci5pZCA9PT0gaWQpO1xuICBpZiAoIXNoZWx0ZXIpIHtcbiAgICByZXR1cm4gcmVzcG9uc2Uuc2VuZFN0YXR1cyg0MDQpO1xuICB9XG4gIHJlc3BvbnNlLnN0YXR1cygyMDApLmpzb24oc2hlbHRlcik7XG59KTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "express",
        "require",
        "app",
        "use",
        "static",
        "cors",
        "set",
        "process",
        "env",
        "PORT",
        "locals",
        "title",
        "get",
        "request",
        "response",
        "send",
        "listen",
        "console",
        "log",
        "shelters",
        "id",
        "name",
        "type",
        "json",
        "params",
        "shelter",
        "find",
        "sendStatus",
        "status"
      ],
      "mappings": "AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,GAAG,GAAGF,OAAO,EAAnB;AACAE,GAAG,CAACC,GAAJ,CAAQH,OAAO,CAACI,MAAR,CAAe,QAAf,CAAR,E,CACA;;AACA,MAAMC,IAAI,GAAGJ,OAAO,CAAC,MAAD,CAApB;;AACAC,GAAG,CAACC,GAAJ,CAAQE,IAAI,EAAZ;AAGAH,GAAG,CAACI,GAAJ,CAAQ,MAAR,EAAgBC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAApC;AACAP,GAAG,CAACQ,MAAJ,CAAWC,KAAX,GAAmB,SAAnB;AAEAT,GAAG,CAACU,GAAJ,CAAQ,GAAR,EAAa,CAACC,OAAD,EAAUC,QAAV,KAAuB;AAClCA,EAAAA,QAAQ,CAACC,IAAT,CAAc,gBAAd;AACD,CAFD;AAIAb,GAAG,CAACc,MAAJ,CAAWd,GAAG,CAACU,GAAJ,CAAQ,MAAR,CAAX,EAA4B,MAAM;AAChCK,EAAAA,OAAO,CAACC,GAAR,CAAa,GAAEhB,GAAG,CAACQ,MAAJ,CAAWC,KAAM,mCAAkCT,GAAG,CAACU,GAAJ,CAAQ,MAAR,CAAgB,GAAlF;AACD,CAFD,E,CAIA;AACA;AAEA;;AACAV,GAAG,CAACQ,MAAJ,CAAWS,QAAX,GAAsB,EAAtB;AAEAjB,GAAG,CAACQ,MAAJ,CAAWS,QAAX,GAAsB,CACpB;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,IAAI,EAAE,OAAlB;AAA2BC,EAAAA,IAAI,EAAE;AAAjC,CADoB,EAEpB;AAAEF,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,IAAI,EAAE,iBAAlB;AAAqCC,EAAAA,IAAI,EAAE;AAA3C,CAFoB,EAGpB;AAAEF,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,IAAI,EAAE,UAAlB;AAA8BC,EAAAA,IAAI,EAAE;AAApC,CAHoB,CAAtB;AAMApB,GAAG,CAACU,GAAJ,CAAQ,GAAR,EAAa,CAACC,OAAD,EAAUC,QAAV,KAAuB;AAClC;AACAZ,EAAAA,GAAG,CAACC,GAAJ,CAAQH,OAAO,CAACI,MAAR,CAAe,QAAf,CAAR;AACD,CAHD,E,CAKA;;AACAF,GAAG,CAACU,GAAJ,CAAQ,kBAAR,EAA4B,CAACC,OAAD,EAAUC,QAAV,KAAuB;AACjD,QAAMK,QAAQ,GAAGjB,GAAG,CAACQ,MAAJ,CAAWS,QAA5B;AAEAL,EAAAA,QAAQ,CAACS,IAAT,CAAc;AAAEJ,IAAAA;AAAF,GAAd;AACD,CAJD;AAMAjB,GAAG,CAACU,GAAJ,CAAQ,sBAAR,EAAgC,CAACC,OAAD,EAAUC,QAAV,KAAuB;AACrD,QAAM;AAAEM,IAAAA;AAAF,MAASP,OAAO,CAACW,MAAvB,CADqD,CAErD;;AACA,QAAMC,OAAO,GAAGvB,GAAG,CAACQ,MAAJ,CAAWS,QAAX,CAAoBO,IAApB,CAAyBD,OAAO,IAAIA,OAAO,CAACL,EAAR,KAAeA,EAAnD,CAAhB;;AACA,MAAI,CAACK,OAAL,EAAc;AACZ,WAAOX,QAAQ,CAACa,UAAT,CAAoB,GAApB,CAAP;AACD;;AACDb,EAAAA,QAAQ,CAACc,MAAT,CAAgB,GAAhB,EAAqBL,IAArB,CAA0BE,OAA1B;AACD,CARD",
      "sourceRoot": "/Users/ruthbrand/haven/",
      "sourcesContent": [
        "const express = require('express');\nconst app = express();\napp.use(express.static('public'));\n//does this go here?\nconst cors = require('cors');\napp.use(cors());\n\n\napp.set('port', process.env.PORT || 3000);\napp.locals.title = 'Pet Box';\n\napp.get('/', (request, response) => {\n  response.send('Oh hey Pet Box');\n});\n\napp.listen(app.get('port'), () => {\n  console.log(`${app.locals.title} is running on http://localhost:${app.get('port')}.`);\n});\n\n//most routes are gets, no post or patch yet until log\n//shelters, counselors, financial resources, food, legal, calming ?\n\n//mock data\napp.locals.shelters = [];\n\napp.locals.shelters = [\n  { id: 'a1', name: 'Rover', type: 'dog' },\n  { id: 'b2', name: 'Marcus Aurelius', type: 'parakeet' },\n  { id: 'c3', name: 'Craisins', type: 'cat' }\n];\n\napp.get('/', (request, response) => {\n  // response is actually handled by static asset express middleware\n  app.use(express.static('public'));\n});\n\n//get request\napp.get('/api/v1/shelters', (request, response) => {\n  const shelters = app.locals.shelters;\n\n  response.json({ shelters });\n});\n\napp.get('/api/v1/shelters/:id', (request, response) => {\n  const { id } = request.params;\n  //iterates through the shelters data but its singular - like a ruby enumerable w/ pipes\n  const shelter = app.locals.shelters.find(shelter => shelter.id === id);\n  if (!shelter) {\n    return response.sendStatus(404);\n  }\n  response.status(200).json(shelter);\n});\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1590607072845
  }
}